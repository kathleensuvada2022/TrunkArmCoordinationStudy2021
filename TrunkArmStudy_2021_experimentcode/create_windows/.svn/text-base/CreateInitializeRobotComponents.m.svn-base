function structure = CreateInitializeRobotComponents( structure, robot )

%% variables used throughout this function
textHeight = 1.923;
componentsFromLeft = 1; 
pushButtonHeight = 2.54;
editBoxHeight = 2.288;

%% Set Inertia component
inertiaFromBottom = 31;

% text
inertiaString = 'Set Inertia: [8]';
inertiaTextWidth = 25;
textPosition = [ componentsFromLeft inertiaFromBottom inertiaTextWidth textHeight ];

structure.inertiaText = CreateTextComponent( structure.figureHandle, textPosition, inertiaString );

% edit box
inertiaEditBoxFromLeft = componentsFromLeft + inertiaTextWidth + 4;
inertiaEditBoxWidth = 12;

structure.inertiaEditBox = uicontrol('Parent', structure.figureHandle,...
    'Style', 'edit',...
    'Units','characters',...
    'String',robot.inertia,...
    'Position', [ inertiaEditBoxFromLeft inertiaFromBottom inertiaEditBoxWidth editBoxHeight ],...
    'FontSize',13.9);
robot.SetInertia( robot.inertia );

%% Arm Button Group
% button group
armButtonGroupFromBottom = inertiaFromBottom - 7;
armButtonGroupWidth = 18.4;
armButtonGroupHeight = 6;
armButtonGroupPosition = [ componentsFromLeft, armButtonGroupFromBottom,...
    armButtonGroupWidth, armButtonGroupHeight ];
structure.armButtonGroup = uibuttongroup('Parent', structure.figureHandle,...
    'Units','characters',...
    'Title','Arm',...
    'FontSize',12,...
    'Position',armButtonGroupPosition);

radioButtonFromLeft = 1;
radioButtonHeight = 1.769;
radioButtonWidth = 14.4;

% right radio button
rightRadioButtonFromBottom = radioButtonHeight*2 - 1.5;
radioButtonPosition = [ radioButtonFromLeft rightRadioButtonFromBottom radioButtonWidth radioButtonHeight ];
structure.rightRadioButton = CreateRadioButtonComponent( structure.armButtonGroup,...
    radioButtonPosition, 'Right' );

% left radio button
leftRadioButtonFromBottom = rightRadioButtonFromBottom - radioButtonHeight;
%leftRadioButtonWidth = 12.8;
radioButtonPosition = [ radioButtonFromLeft leftRadioButtonFromBottom radioButtonWidth radioButtonHeight ];
structure.leftRadioButton = CreateRadioButtonComponent( structure.armButtonGroup,...
    radioButtonPosition, 'Left' );
%set( structure.leftRadioButton, 'Enable','off');

set( structure.armButtonGroup, 'SelectedObject', structure.leftRadioButton );
setappdata( structure.figureHandle, 'arm', structure.leftRadioButton );


%% Scope Panel and components
% panel
scopePanelTitle = 'Scope';

scopePanelFromBottom = 12.5;
scopePanelWidth = 65.2; 
scopePanelHeight = 11.5;
scopePanelPosition = [ componentsFromLeft, scopePanelFromBottom, scopePanelWidth, scopePanelHeight ];    % [left bottom width height]

structure.scopePanel = CreatePanel( scopePanelPosition, structure.figureHandle, scopePanelTitle );
set(structure.scopePanel,'Title','Scope','FontSize',12);
    
% "save file in:" text
savefileString = 'Save File In:';
savefileFromBottom = 7.3;
savefileTextWidth = 23.4;
textPosition = [ componentsFromLeft savefileFromBottom savefileTextWidth textHeight ];

structure.inertiaText = CreateTextComponent( structure.scopePanel, textPosition, savefileString );

% browse push button
browsePushButtonFromLeft = 40;
browsePushButtonFromBottom = 7.3;
browsePushButtonWidth = 15.8;
browsePushButtonPosition = [ browsePushButtonFromLeft, browsePushButtonFromBottom,...
    browsePushButtonWidth, pushButtonHeight ];

structure.browsePushButton = CreatePushButtonComponent(...
    structure.scopePanel, browsePushButtonPosition, 'Browse');

% filename edit box
filenameEditBoxFromBottom = 4.54;
filenameEditBoxWidth = 55.2;
editBoxPosition = [ componentsFromLeft filenameEditBoxFromBottom filenameEditBoxWidth editBoxHeight ];
structure.filenameEditBox = CreateEditBoxComponent( structure.scopePanel,...
    editBoxPosition, pwd );
setappdata(structure.figureHandle,'filename',pwd);

% "Frequency (Hz): [250]" text
frequencyString = 'Frequency (Hz): [250]';
frequencyFromBottom = 0.92;
frequencyTextWidth = 39;
textPosition = [ componentsFromLeft frequencyFromBottom frequencyTextWidth textHeight ];

CreateTextComponent( structure.scopePanel, textPosition, frequencyString );

% frequency pop-up menu
frequencyPopUpMenuString = {'250','1','2'}; % add all frequency values
frequencyPopUpMenuFromLeft = componentsFromLeft + frequencyTextWidth + 2;
popUpMenuWidth = 14;
popUpMenuHeight = 2.38;

structure.frequencyPopUpMenu = uicontrol('Parent', structure.scopePanel,...
    'Style', 'popupmenu',...
    'Units','characters',...
    'Position', [ frequencyPopUpMenuFromLeft frequencyFromBottom popUpMenuWidth popUpMenuHeight ],...
    'String',frequencyPopUpMenuString,...
    'HorizontalAlignment','left',...
    'FontSize',13.9);
set(structure.frequencyPopUpMenu,'Enable','Off'); %temp - not yet implemented

%% Participant Parameters, Locate Shoulder, Weigh Arm push buttons
% Participant Parameters push button
participantParametersPushButtonFromLeft = componentsFromLeft;
participantParametersPushButtonFromBottom = 9.23;
participantParametersPushButtonWidth = 42.6;
participantParametersPushButtonPosition = [ participantParametersPushButtonFromLeft, participantParametersPushButtonFromBottom,...
    participantParametersPushButtonWidth, pushButtonHeight ];

structure.participantParametersPushButton = CreatePushButtonComponent(...
    structure.figureHandle,...
    participantParametersPushButtonPosition,...
    'Participant Parameters');

% Locate Shoulder push button
locateShoulderPushButtonFromBottom = 5.85;
locateShoulderPushButtonWidth = 31.6;
locateShoulderPushButtonPosition = [ componentsFromLeft, locateShoulderPushButtonFromBottom,...
    locateShoulderPushButtonWidth, pushButtonHeight ];

structure.locateShoulderPushButton = CreatePushButtonComponent(...
    structure.figureHandle, locateShoulderPushButtonPosition, 'Locate Shoulder');

% Weigh Arm push button
weighArmPushButtonFromLeft = componentsFromLeft + locateShoulderPushButtonWidth + 2;
weighArmPushButtonFromBottom = locateShoulderPushButtonFromBottom;
weighArmPushButtonWidth = 22.4;
weighArmPushButtonPosition = [ weighArmPushButtonFromLeft, weighArmPushButtonFromBottom,...
    weighArmPushButtonWidth, pushButtonHeight ];

structure.weighArmPushButton = CreatePushButtonComponent(...
    structure.figureHandle, weighArmPushButtonPosition, 'Weigh Arm');
setappdata( structure.figureHandle, 'limbWeight', 25 );


%% OK and Cancel push buttons
% OK push button
okPushButtonFromLeft = componentsFromLeft;
okPushButtonFromBottom = 1.1;
okPushButtonWidth = 12.8;
okPushButtonPosition = [ okPushButtonFromLeft, okPushButtonFromBottom,...
    okPushButtonWidth, pushButtonHeight ];

structure.okPushButton = CreatePushButtonComponent(...
    structure.figureHandle, okPushButtonPosition, 'OK');

% Cancel push button
cancelPushButtonFromLeft = componentsFromLeft + okPushButtonWidth + 5;
cancelPushButtonFromBottom = okPushButtonFromBottom;
cancelPushButtonWidth = 14.8;
cancelPushButtonPosition = [ cancelPushButtonFromLeft, cancelPushButtonFromBottom,...
    cancelPushButtonWidth, pushButtonHeight ];

structure.cancelPushButton = CreatePushButtonComponent(...
    structure.figureHandle, cancelPushButtonPosition, 'Cancel');
set( structure.cancelPushButton, 'Enable','off');

end