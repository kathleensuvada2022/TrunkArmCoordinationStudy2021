function structure = CreateParticipantParametersComponents( structure )

%% variables used throughout this function
textHeight = 1.923;
firstColumnFromLeft = 1; 
pushButtonHeight = 2.54;
editBoxFromLeft = 50;
editBoxWidth = 17.2;
editBoxHeight = 2.288;
spaceBetweenComponents = 3.6;

%% load from file push button
loadFromFilePushButtonFromBottom = 61+1;
loadFromFilePushButtonWidth = 29.6;
loadFromFilePushButtonPosition = [ firstColumnFromLeft, loadFromFilePushButtonFromBottom,...
    loadFromFilePushButtonWidth, pushButtonHeight ];

structure.loadFromFilePushButton = CreatePushButtonComponent(...
    structure.figureHandle, loadFromFilePushButtonPosition, 'Load From File');


%% first column - text labels
% string in each text component
firstColumnString = { 'Participant ID:', 'Age:', 'Gender', 'ACT3D Version:',...
    'Upper Arm Length:', 'Lower Arm Length:', 'Elbow To End Effector:',...
    'Hand Length:', 'Elbow Flexion: [90]', 'Shoulder Flexion: [45]',...
    'Abduction Max (torque):', 'Abduction Max (force):', 'Limb Weight:' };

% initialize components
structure.firstColumn = zeros( 1, length(firstColumnString) );

% determine position of each text component (in characters)
firstColumnFromLeft = 1;
firstColumnFromBottom = (54.5 : -spaceBetweenComponents : 11.3)+4;%[ 51.5, 47.5, 43.5, 39.5, 35.5, 31.5, 23.5, 19.5, 15.5, 11.5, 7.5 ];
firstColumnWidth = 40;%[ 24.6, 8.4, 14.4, 29, 33.6, 33.6, 39.8, 23.4, 40, 40, 27 ];

for i = 1:length(firstColumnString)
    textPosition = [ firstColumnFromLeft firstColumnFromBottom(i) firstColumnWidth textHeight ]; % firstColumnWidth(i)
    CreateTextComponent( structure.figureHandle, textPosition, firstColumnString(i) ); 
end

%% second column - edit boxes
% Participant ID edit box
participantIdFromBottom = firstColumnFromBottom(1);
participantIdString = '000';
structure.participantIdEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft participantIdFromBottom editBoxWidth editBoxHeight ],participantIdString);
setappdata( structure.figureHandle, 'participantId', participantIdString );

% Age edit box
ageFromBottom = firstColumnFromBottom(2);
ageString = '00';
structure.ageEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft ageFromBottom editBoxWidth editBoxHeight ], ageString );
setappdata( structure.figureHandle, 'age', ageString  );

% Gender edit box
genderFromBottom = firstColumnFromBottom(3);
genderString = 'M';
structure.genderEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft genderFromBottom editBoxWidth editBoxHeight ], genderString );
setappdata( structure.figureHandle, 'gender', genderString  );

% ACT3D Version edit box
act3dVersionFromBottom = firstColumnFromBottom(4);
act3dVersionString = '1.2';
structure.act3dVersionEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft act3dVersionFromBottom editBoxWidth editBoxHeight ], act3dVersionString );
setappdata( structure.figureHandle, 'act3dVersion', act3dVersionString  );

% Upper Arm Length edit box
upperArmLengthFromBottom = firstColumnFromBottom(5);
upperArmLengthString = '31';
structure.upperArmLengthEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft upperArmLengthFromBottom editBoxWidth editBoxHeight ], upperArmLengthString );
setappdata( structure.figureHandle, 'upperArmLength', upperArmLengthString  );

% Lower Arm Length edit box
lowerArmLengthFromBottom = firstColumnFromBottom(6);
lowerArmLengthString = '28';
structure.lowerArmLengthEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft lowerArmLengthFromBottom editBoxWidth editBoxHeight ], lowerArmLengthString );
setappdata( structure.figureHandle, 'lowerArmLength', lowerArmLengthString  );

% Elbow To End Effector edit box
elbowToEndEffectorFromBottom = firstColumnFromBottom(7);
elbowToEndEffectorString = '22';
structure.elbowToEndEffectorEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft elbowToEndEffectorFromBottom editBoxWidth editBoxHeight ], elbowToEndEffectorString );
setappdata( structure.figureHandle, 'elbowToEndEffector', elbowToEndEffectorString  );

% Hand Length edit box
handLengthFromBottom = firstColumnFromBottom(8);
handLengthString = '19';
structure.handLengthEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft handLengthFromBottom editBoxWidth editBoxHeight ], handLengthString );
setappdata( structure.figureHandle, 'handLength', handLengthString );

% Elbow Flexion edit box
elbowFlexionFromBottom = firstColumnFromBottom(9);
elbowFlexionString = '90';
structure.elbowFlexionEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft elbowFlexionFromBottom editBoxWidth editBoxHeight ], elbowFlexionString );
setappdata( structure.figureHandle, 'elbowFlexion', elbowFlexionString );

% Shoulder Flexion edit box
shoulderFlexionFromBottom = firstColumnFromBottom(10);
shoulderFlexionString = '45';
structure.shoulderFlexionEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft shoulderFlexionFromBottom editBoxWidth editBoxHeight ], shoulderFlexionString );
setappdata( structure.figureHandle, 'shoulderFlexion', shoulderFlexionString );

% Abduction Max torque edit box
abductionMaxFromBottom = firstColumnFromBottom(11);
abductionMaxString = '0';
structure.abductionMaxTorqueEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft abductionMaxFromBottom editBoxWidth editBoxHeight ], abductionMaxString );
setappdata( structure.figureHandle, 'abductionMax', abductionMaxString );

% Abduction Max torque edit box
abductionMaxFromBottom = firstColumnFromBottom(12);
abductionMaxString = '0';
structure.abductionMaxForceEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft abductionMaxFromBottom editBoxWidth editBoxHeight ], abductionMaxString );
setappdata( structure.figureHandle, 'abductionMax', abductionMaxString );
set( structure.abductionMaxForceEditBox, 'Enable', 'off' );

% Limb Weight edit box
limbWeightFromBottom = firstColumnFromBottom(13);
limbWeightString = '0';
structure.limbWeightEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ editBoxFromLeft limbWeightFromBottom editBoxWidth editBoxHeight ], limbWeightString );
setappdata( structure.figureHandle, 'limbWeight', limbWeightString );
set( structure.limbWeightEditBox, 'Enable', 'off' );

%% Units that acompany edit boxes
% string in each text component
unitsString = { 'cm', 'cm', 'cm', 'cm', 'o', 'o', 'N-m', 'N', 'N' };
    
% initialize components
structure.units = zeros( 1, length(unitsString) );

% determine position of each text component (in characters)
unitsFromLeft = 68;
unitsFromBottom = [ 40.5, 37, 33, 29.5, 26.5, 23, 18.75, 15, 11.75  ] + 4;
unitsWidth = [ 5.4, 5.4, 5.4, 5.4, 2.2, 2.2, 8, 2.6, 2.6 ];

for i = 1:length(unitsString)
    textPosition = [ unitsFromLeft unitsFromBottom(i) unitsWidth(i) textHeight ];
    structure.units(i) = CreateTextComponent( structure.figureHandle,...
        textPosition, unitsString(i) );
end

%% Notes - text and edit box
% Notes text
notesTextString = 'Notes:';
notesTextFromBottom = firstColumnFromBottom(end) - spaceBetweenComponents - 1;
notesTextWidth = 11.4;
notesTextPosition = [ firstColumnFromLeft notesTextFromBottom notesTextWidth textHeight ];
structure.notesText = CreateTextComponent( structure.figureHandle,...
    notesTextPosition, notesTextString );

% Notes edit box
notesEditBoxFromBottom = notesTextFromBottom - textHeight - spaceBetweenComponents;
notesEditBoxWidth = 66;
notesEditBoxHeight = 5;
notesString = '';
structure.notesEditBox = CreateEditBoxComponent( structure.figureHandle,...
    [ firstColumnFromLeft notesEditBoxFromBottom notesEditBoxWidth notesEditBoxHeight ], notesString );
setappdata( structure.figureHandle, 'notes', notesString );



%% Save to File, Save, and Cancel push buttons
% Save to File push button
saveToFilePushButtonFromLeft = firstColumnFromLeft;
saveToFilePushButtonFromBottom = notesEditBoxFromBottom - 4;
saveToFilePushButtonWidth = 23.4;
saveToFilePushButtonPosition = [ saveToFilePushButtonFromLeft, saveToFilePushButtonFromBottom,...
    saveToFilePushButtonWidth, pushButtonHeight ];

structure.saveToFilePushButton = CreatePushButtonComponent(...
    structure.figureHandle, saveToFilePushButtonPosition, 'Save to File');

% Save push button
savePushButtonFromLeft = firstColumnFromLeft + 40;
savePushButtonFromBottom = saveToFilePushButtonFromBottom;
savePushButtonWidth = 11.4;
savePushButtonPosition = [ savePushButtonFromLeft, savePushButtonFromBottom,...
    savePushButtonWidth, pushButtonHeight ];

structure.savePushButton = CreatePushButtonComponent(...
    structure.figureHandle, savePushButtonPosition, 'Save');

% Cancel push button
cancelPushButtonFromLeft = savePushButtonFromLeft + savePushButtonWidth + 1;
cancelPushButtonFromBottom = savePushButtonFromBottom;
cancelPushButtonWidth = 14.8;
cancelPushButtonPosition = [ cancelPushButtonFromLeft, cancelPushButtonFromBottom,...
    cancelPushButtonWidth, pushButtonHeight ];

structure.cancelPushButton = CreatePushButtonComponent(...
    structure.figureHandle, cancelPushButtonPosition, 'Cancel');
set( structure.cancelPushButton, 'Enable','off');

end